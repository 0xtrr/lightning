---
name: Continuous Integration
on:
  push:
  pull_request:
jobs:
  normal-test:
    name: Normal Test Config ${{ matrix.cfg }}
    runs-on: ubuntu-20.04
    env:
      DEVELOPER: 1
      VALGRIND: 0
      EXPERIMENTAL_FEATURES: 0
      COMPAT: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          # All of the following will just run `make pytest`
          - CFG: "clang-fuzzing"
            COMPILER: clang
            FUZZING: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          bash -x .github/scripts/setup.sh

      - name: Build
        env:
          VALGRIND: ${{ matrix.VALGRIND }}
          DEVELOPER: ${{ matrix.DEVELOPER }}
          EXPERIMENTAL_FEATURES: ${{ matrix.EXPERIMENTAL_FEATURES }}
          EXPERIMENTAL_DUAL_FUND: ${{ matrix.EXPERIMENTAL_DUAL_FUND }}
          COMPILER: ${{ matrix.COMPILER }}
          ARCH: ${{ matrix.ARCH }}
          COMPAT: ${{ matrix.COMPAT }}
          FUZZING: ${{ matrix.FUZZING }}
          PYTEST_PAR: ${{ matrix.PYTEST_PAR }}
          PYTEST_OPTS: ${{ matrix.PYTEST_OPTS }}
          NETWORK: ${{ matrix.NETWORK }}
          TEST_CHECK_DBSTMTS: ${{ matrix.TEST_CHECK_DBSTMTS }}
          TEST_CMD: ${{ matrix.TEST_CMD }}
          TEST_GROUP_COUNT: ${{ matrix.TEST_GROUP_COUNT }}
          TEST_GROUP: ${{ matrix.TEST_GROUP }}
          TEST_DB_PROVIDER: ${{ matrix.DB }}
        run: |
          bash -x .github/scripts/build.sh

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Junit Report ${{ github.run_number }}.${{ matrix.cfg }}
          path: report.*

